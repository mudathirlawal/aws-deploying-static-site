{"version":3,"sources":["components/QuizCard.js","components/QuizSummary.js","components/Quiz.js","components/AppInfo.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","layout","width","backgroundColor","height","textAlign","questionAnswerTitle","textTransform","fontWeight","numberHeading","QuizCard","props","classes","useState","expanded","setExpanded","toggleExpanded","Card","CardContent","Typography","variant","color","component","className","idx","total","question","questionTitle","questionText","CardActions","disableSpacing","Button","size","onClick","Collapse","in","timeout","enter","exit","unmountOnExit","answerTitle","answerText","onQuizAnswerCorrect","onQuizAnswerIncorrect","fontSize","progress","QuizSummary","gutterBottom","correctQuestions","length","incorrectQuestions","Math","floor","LinearProgress","value","Divider","List","ListSubheader","id","map","item","index","ListItem","key","name","ListItemText","ListItemSecondaryAction","window","open","url","generateResults","restartQuiz","Quiz","setIdx","questions","setQuestions","quizState","setQuizState","setTotal","setIncorrectQuestions","setCorrectQuestions","questionData","setQuestionData","nextQuestion","isCorrect","cq","concat","iq","downloadQuestionsData","a","fetch","then","response","json","data","sort","random","React","useEffect","description","Fragment","CircularProgress","AppInfo","navigateToQuiz","root","background","paddingTop","subtitle","fontStyle","padding","createMuiTheme","palette","primary","main","App","isDrawerOpen","state","setState","pageState","setPageState","toggleDrawer","ThemeProvider","CssBaseline","AppBar","position","Toolbar","IconButton","edge","aria-label","Drawer","ModalProps","onBackdropClick","button","ListItemIcon","Container","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a82ada5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    height: '100%',\n    textAlign: 'left'\n  },\n  questionAnswerTitle: {\n    textTransform: 'uppercase',\n    fontWeight: 500\n  },\n  numberHeading: {\n    textAlign: 'right',\n    width: '100%'\n  }\n}));\n\nexport default function QuizCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n  const answerCorrect = () => {\n    toggleExpanded();\n    props.onQuizAnswerCorrect();\n  }\n\n  const answerIncorrect = () => {\n    toggleExpanded();\n    props.onQuizAnswerIncorrect();\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.numberHeading}>\n          {props.idx + 1} of {props.total}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.questionAnswerTitle}>\n          {props.question.questionTitle}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.question.questionText}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Button size=\"small\" color=\"primary\" onClick={toggleExpanded}>\n          Show Answer\n        </Button>\n      </CardActions>\n      <Collapse in={expanded} timeout={{ enter: 250, exit: 0 }} unmountOnExit>\n        <CardContent>\n          <Typography color=\"textSecondary\" className={classes.questionAnswerTitle}>\n            {props.question.answerTitle}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.question.answerText}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={answerCorrect}>\n            Correct\n          </Button>\n          <Button size=\"small\" onClick={answerIncorrect}>\n            Incorrect\n          </Button>\n        </CardActions>\n      </Collapse>\n    </Card>\n  )\n}","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Divider,\n  ListItemText,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemSecondaryAction,\n  LinearProgress\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    height: '100%',\n    textAlign: 'left'\n  },\n  numberHeading: {\n    fontSize: '20px',\n    fontWeight: 200,\n    textAlign: 'left',\n    width: '100%'\n  },\n  questionAnswerTitle: {\n    textTransform: 'uppercase',\n    fontWeight: 500\n  },\n  progress: {\n    height: '15px'\n  }\n}));\n\nconst generateResults = (props) => {\n  if(props.incorrectQuestions.length > 0) {\n    return (\n      <List>\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Services to Study\n        </ListSubheader>\n        {props.incorrectQuestions.map((item, index) =>\n        <ListItem key={item.name}>\n          <ListItemText>{item.name}</ListItemText>\n          <ListItemSecondaryAction>\n            <Button onClick={() => window.open(item.url, \"_blank\")}>Learn More</Button>\n          </ListItemSecondaryAction>\n        </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (\n      <CardContent>\n        <p>You managed to get all of the services correct.  Great job!</p>\n      </CardContent>\n    )\n  }\n}\n\nexport default function QuizSummary(props) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Quiz Results\n        </Typography>\n        <Typography component=\"h1\" className={classes.numberHeading}>\n          {props.correctQuestions.length}/{props.correctQuestions.length + props.incorrectQuestions.length} Correct ({Math.floor((props.correctQuestions.length/(props.correctQuestions.length + props.incorrectQuestions.length))*100)}%)\n        </Typography>\n        <LinearProgress className={classes.progress} variant=\"determinate\" value={(props.correctQuestions.length/(props.correctQuestions.length + props.incorrectQuestions.length))*100} />\n      </CardContent>\n      <Divider />\n        { generateResults(props) }\n      <Divider />\n      <CardActions>\n        <Button onClick={props.restartQuiz}>Retake Quiz</Button>\n      </CardActions>\n    </Card>\n  )\n}","import React, { useState } from \"react\";\nimport {\n  Button, \n  LinearProgress,\n  Typography,\n  Divider,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress\n} from '@material-ui/core';\nimport QuizCard from './QuizCard';\nimport QuizSummary from './QuizSummary';\n\nconst LOADING_STATE = -1;\nconst PRE_QUIZ_STATE = 0;\nconst QUIZ_STATE = 1;\nconst SUMMARY_STATE = 2;\n\nexport default function Quiz() {\n  \n  const [idx, setIdx] = useState(0);\n\n  const [questions, setQuestions] = useState([]);\n  const [quizState, setQuizState] = useState(LOADING_STATE);\n  const [total, setTotal] = useState(0);\n  const [incorrectQuestions, setIncorrectQuestions] = useState([]);\n  const [correctQuestions, setCorrectQuestions] = useState([]);\n  const [questionData, setQuestionData] = useState({\n    questionText: \"\",\n    questionTitle: \"\",\n    answerText: \"\",\n    answerTitle: \"\"\n  });\n\n  const nextQuestion = (isCorrect) => {\n    if(!isCorrect) {\n      let iq = incorrectQuestions.concat(questions[idx]);\n      setIncorrectQuestions(iq);\n    } else {\n      let cq = correctQuestions.concat(questions[idx]);\n      setCorrectQuestions(cq);\n    }\n    if(idx + 1 === total) {\n      setQuizState(SUMMARY_STATE);\n      return;\n    }\n    setIdx(idx + 1);\n  }\n\n  const downloadQuestionsData = async () => {\n\t\treturn fetch('https://ps-ccp-project.s3.amazonaws.com/ps-ccp-services.json')\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      setQuestions(data.sort(() => Math.random() - 0.5));\n    });\n  }\n\n  const restartQuiz = () => {\n    setQuizState(LOADING_STATE);\n    setQuestionData({\n      questionText: \"\",\n      questionTitle: \"\",\n      answerText: \"\",\n      answerTitle: \"\"\n    });\n    setQuestions([]);\n    setIncorrectQuestions([]);\n    setCorrectQuestions([]);\n    downloadQuestionsData();\n  }\n\n  React.useEffect(() => {\n    setTotal(questions.length);\n    setIdx(0);\n  }, [questions]);\n\n  React.useEffect(() => {\n    downloadQuestionsData();\n  }, []);\n\n  React.useEffect(() => {\n    const question = questions[idx];\n    if(!question) {\n      return;\n    }\n    setQuestionData({ \n      questionText: question.description,\n      questionTitle: \"Service Description\",\n      answerText: question.name,\n      answerTitle: \"Service Name\"\n    });\n    if(idx === 0) {\n      setQuizState(PRE_QUIZ_STATE);\n    }\n  }, [idx, questions]);\n\n  return (\n    <React.Fragment>\n      { quizState === LOADING_STATE &&\n        <Card>\n          <CardContent>\n            <CircularProgress size={20} /> Loading Question Data ...\n          </CardContent>\n        </Card> }\n      { quizState === PRE_QUIZ_STATE &&\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Certified Cloud Practitioner - Services Quiz\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Once you start the quiz, it will show you the summary of an AWS service, and you can take time to see if you can remember the name of the service. After this, you can show the answer and indicate if you were correct or incorrect in your answer. The app will keep track of the number you got right as well as services you may want to spend more time studying.\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={() => setQuizState(QUIZ_STATE)}>\n              Start Quiz\n            </Button>\n          </CardActions>\n        </Card> }\n      { quizState === QUIZ_STATE &&\n        <React.Fragment>\n          <LinearProgress variant=\"determinate\" value={(idx/total)*100} />\n          <QuizCard\n            idx={idx} \n            total={total}\n            question={questionData}\n            onQuizAnswerCorrect={() => nextQuestion(true)}\n            onQuizAnswerIncorrect={() => nextQuestion(false)} />\n        </React.Fragment>\n      }\n      { quizState === SUMMARY_STATE &&\n        <QuizSummary\n          correctQuestions={correctQuestions}\n          incorrectQuestions={incorrectQuestions}\n          restartQuiz={restartQuiz} />\n      }\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Divider\n} from '@material-ui/core';\n\nexport default function AppInfo(props) {\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          App Info\n        </Typography>\n        <Typography component=\"p\">\n          This app was built for a Pluralsight project on the AWS Certified Cloud Practitioner path. It is &copy;2020 Pluralsight. \n        </Typography>\n      </CardContent>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          React\n        </Typography>\n        <Typography component=\"p\">\n        MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => window.open(\"https://reactjs.org/\", \"_blank\")}>Visit React</Button>\n      </CardActions>\n      <Divider />\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Material UI\n        </Typography>\n        <Typography component=\"p\">\n        The MIT License (MIT)\n\nCopyright (c) 2014 Call-Em-All\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => window.open(\"https://material-ui.com/\", \"_blank\")}>Visit Material UI</Button>\n      </CardActions>\n      <Divider />\n      <CardActions>\n        <Button onClick={props.navigateToQuiz}>Take Quiz</Button>\n      </CardActions>\n    </Card>\n  )\n}","import React  from 'react';\nimport './App.css';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  Container\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Quiz from './components/Quiz';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AppInfo from './components/AppInfo';\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#1B1B1B',\n    color: 'white',\n  },\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    paddingTop: '30px'\n  },\n  subtitle: {\n    color: '#666666',\n    fontStyle: 'italic',\n    fontWeight: 400,\n    width: '100%',\n    textAlign: 'center',\n    padding: '10px 0'\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#ed1f6a',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    }\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    isDrawerOpen: false\n  });\n\n  const QUIZ_STATE = 0;\n  const APP_INFO_STATE = 1;\n  const [pageState, setPageState] = React.useState(QUIZ_STATE);\n\n  const toggleDrawer  = () => {\n    setState({ ...state, isDrawerOpen: !state.isDrawerOpen });\n  }\n\n  const navigateToCourses = () => {\n    window.open(\"https://app.pluralsight.com/paths/certificate/aws-certified-cloud-practitioner\", \"_blank\")\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.root}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" >\n              AWS Services Quiz\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          open={state.isDrawerOpen}\n          ModalProps={{ onBackdropClick: toggleDrawer }}>\n          <div onClick={toggleDrawer}>\n            <List>\n              <ListItem button key=\"courses\" onClick={navigateToCourses}>\n                <ListItemIcon><LocalLibraryIcon /></ListItemIcon>\n                <ListItemText primary=\"Courses\" />\n              </ListItem>\n              <ListItem button key=\"quiz\" onClick={() => setPageState(QUIZ_STATE)}>\n                <ListItemIcon><InfoIcon /></ListItemIcon>\n                <ListItemText primary=\"Quiz\" />\n              </ListItem>\n              <ListItem button key=\"info\" onClick={() => setPageState(APP_INFO_STATE)}>\n                <ListItemIcon><InfoIcon /></ListItemIcon>\n                <ListItemText primary=\"App Info\" />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n        <Container className={classes.layout}>\n          { pageState === QUIZ_STATE &&\n          <Quiz />\n          }\n          { pageState === APP_INFO_STATE &&\n          <AppInfo \n            navigateToQuiz={() => setPageState(QUIZ_STATE)} />\n          }\n          <div className={classes.subtitle}>\n            &copy; 2020 Pluralsight. Learn more about the <a href=\"https://app.pluralsight.com/paths/certificate/aws-certified-cloud-practitioner\">AWS Certified Cloud Practitoner learning path</a>.\n          </div>\n        </Container>\n\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}