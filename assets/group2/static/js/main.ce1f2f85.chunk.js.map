{"version":3,"sources":["components/QuizCard.js","components/QuizSummary.js","components/Quiz.js","components/AppInfo.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","layout","width","backgroundColor","height","textAlign","questionAnswerTitle","textTransform","fontWeight","numberHeading","QuizCard","props","classes","useState","expanded","setExpanded","toggleExpanded","Card","CardContent","Typography","variant","color","component","className","idx","total","question","questionTitle","questionText","CardActions","disableSpacing","Button","size","onClick","Collapse","in","timeout","enter","exit","unmountOnExit","answerTitle","answerText","onQuizAnswerCorrect","onQuizAnswerIncorrect","fontSize","progress","QuizSummary","gutterBottom","correctQuestions","length","incorrectQuestions","Math","floor","LinearProgress","value","Divider","List","ListSubheader","id","map","item","index","ListItem","key","name","ListItemText","ListItemSecondaryAction","window","open","url","generateResults","restartQuiz","Quiz","setIdx","questions","setQuestions","quizState","setQuizState","setTotal","setIncorrectQuestions","setCorrectQuestions","questionData","setQuestionData","nextQuestion","isCorrect","cq","concat","iq","downloadQuestionsData","a","fetch","then","response","json","data","sort","random","React","useEffect","description","Fragment","CircularProgress","AppInfo","navigateToQuiz","root","background","paddingTop","createMuiTheme","palette","primary","main","App","isDrawerOpen","state","setState","pageState","setPageState","toggleDrawer","ThemeProvider","CssBaseline","AppBar","position","Toolbar","IconButton","edge","aria-label","Drawer","ModalProps","onBackdropClick","button","ListItemIcon","Container","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce1f2f85.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    height: '100%',\n    textAlign: 'left'\n  },\n  questionAnswerTitle: {\n    textTransform: 'uppercase',\n    fontWeight: 500\n  },\n  numberHeading: {\n    textAlign: 'right',\n    width: '100%'\n  }\n}));\n\nexport default function QuizCard(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpanded = () => {\n    setExpanded(!expanded)\n  }\n  const answerCorrect = () => {\n    toggleExpanded();\n    props.onQuizAnswerCorrect();\n  }\n\n  const answerIncorrect = () => {\n    toggleExpanded();\n    props.onQuizAnswerIncorrect();\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.numberHeading}>\n          {props.idx + 1} of {props.total}\n        </Typography>\n        <Typography color=\"textSecondary\" className={classes.questionAnswerTitle}>\n          {props.question.questionTitle}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.question.questionText}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Button size=\"small\" color=\"primary\" onClick={toggleExpanded}>\n          Show Answer\n        </Button>\n      </CardActions>\n      <Collapse in={expanded} timeout={{ enter: 250, exit: 0 }} unmountOnExit>\n        <CardContent>\n          <Typography color=\"textSecondary\" className={classes.questionAnswerTitle}>\n            {props.question.answerTitle}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.question.answerText}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={answerCorrect}>\n            Correct\n          </Button>\n          <Button size=\"small\" onClick={answerIncorrect}>\n            Incorrect\n          </Button>\n        </CardActions>\n      </Collapse>\n    </Card>\n  )\n}","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Divider,\n  ListItemText,\n  List,\n  ListSubheader,\n  ListItem,\n  ListItemSecondaryAction,\n  LinearProgress\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    height: '100%',\n    textAlign: 'left'\n  },\n  numberHeading: {\n    fontSize: '20px',\n    fontWeight: 200,\n    textAlign: 'left',\n    width: '100%'\n  },\n  questionAnswerTitle: {\n    textTransform: 'uppercase',\n    fontWeight: 500\n  },\n  progress: {\n    height: '15px'\n  }\n}));\n\nconst generateResults = (props) => {\n  if(props.incorrectQuestions.length > 0) {\n    return (\n      <List>\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Services to Study\n        </ListSubheader>\n        {props.incorrectQuestions.map((item, index) =>\n        <ListItem key={item.name}>\n          <ListItemText>{item.name}</ListItemText>\n          <ListItemSecondaryAction>\n            <Button onClick={() => window.open(item.url, \"_blank\")}>Learn More</Button>\n          </ListItemSecondaryAction>\n        </ListItem>\n        )}\n      </List>\n    )\n  } else {\n    return (\n      <CardContent>\n        <p>You managed to get all of the services correct.  Great job!</p>\n      </CardContent>\n    )\n  }\n}\n\nexport default function QuizSummary(props) {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          Quiz Results\n        </Typography>\n        <Typography component=\"h1\" className={classes.numberHeading}>\n          {props.correctQuestions.length}/{props.correctQuestions.length + props.incorrectQuestions.length} Correct ({Math.floor((props.correctQuestions.length/(props.correctQuestions.length + props.incorrectQuestions.length))*100)}%)\n        </Typography>\n        <LinearProgress className={classes.progress} variant=\"determinate\" value={(props.correctQuestions.length/(props.correctQuestions.length + props.incorrectQuestions.length))*100} />\n      </CardContent>\n      <Divider />\n        { generateResults(props) }\n      <Divider />\n      <CardActions>\n        <Button onClick={props.restartQuiz}>Retake Quiz</Button>\n      </CardActions>\n    </Card>\n  )\n}","import React, { useState } from \"react\";\nimport {\n  Button, \n  LinearProgress,\n  Typography,\n  Divider,\n  Card,\n  CardContent,\n  CardActions,\n  CircularProgress\n} from '@material-ui/core';\nimport QuizCard from './QuizCard';\nimport QuizSummary from './QuizSummary';\n\nconst LOADING_STATE = -1;\nconst PRE_QUIZ_STATE = 0;\nconst QUIZ_STATE = 1;\nconst SUMMARY_STATE = 2;\n\nexport default function Quiz() {\n  \n  const [idx, setIdx] = useState(0);\n\n  const [questions, setQuestions] = useState([]);\n  const [quizState, setQuizState] = useState(LOADING_STATE);\n  const [total, setTotal] = useState(0);\n  const [incorrectQuestions, setIncorrectQuestions] = useState([]);\n  const [correctQuestions, setCorrectQuestions] = useState([]);\n  const [questionData, setQuestionData] = useState({\n    questionText: \"\",\n    questionTitle: \"\",\n    answerText: \"\",\n    answerTitle: \"\"\n  });\n\n  const nextQuestion = (isCorrect) => {\n    if(!isCorrect) {\n      let iq = incorrectQuestions.concat(questions[idx]);\n      setIncorrectQuestions(iq);\n    } else {\n      let cq = correctQuestions.concat(questions[idx]);\n      setCorrectQuestions(cq);\n    }\n    if(idx + 1 === total) {\n      setQuizState(SUMMARY_STATE);\n      return;\n    }\n    setIdx(idx + 1);\n  }\n\n  const downloadQuestionsData = async () => {\n\t\treturn fetch('https://ps-cloud-practitioner.s3.amazonaws.com/ps-ccp-services.json')\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      setQuestions(data.sort(() => Math.random() - 0.5));\n    });\n  }\n\n  const restartQuiz = () => {\n    setQuizState(LOADING_STATE);\n    setQuestionData({\n      questionText: \"\",\n      questionTitle: \"\",\n      answerText: \"\",\n      answerTitle: \"\"\n    });\n    setQuestions([]);\n    setIncorrectQuestions([]);\n    setCorrectQuestions([]);\n    downloadQuestionsData();\n  }\n\n  React.useEffect(() => {\n    setTotal(questions.length);\n    setIdx(0);\n  }, [questions]);\n\n  React.useEffect(() => {\n    downloadQuestionsData();\n  }, []);\n\n  React.useEffect(() => {\n    const question = questions[idx];\n    if(!question) {\n      return;\n    }\n    setQuestionData({ \n      questionText: question.description,\n      questionTitle: \"Service Description\",\n      answerText: question.name,\n      answerTitle: \"Service Name\"\n    });\n    if(idx === 0) {\n      setQuizState(PRE_QUIZ_STATE);\n    }\n  }, [idx, questions]);\n\n  return (\n    <React.Fragment>\n      { quizState === LOADING_STATE &&\n        <Card>\n          <CardContent>\n            <CircularProgress size={20} /> Loading Question Data ...\n          </CardContent>\n        </Card> }\n      { quizState === PRE_QUIZ_STATE &&\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Certified Cloud Practitioner - Services Quiz\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Once you start the quiz, it will show you the summary of an AWS service, and you can take time to see if you can remember the name of the service. After this, you can show the answer and indicate if you were correct or incorrect in your answer. The app will keep track of the number you got right as well as services you may want to spend more time studying.\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={() => setQuizState(QUIZ_STATE)}>\n              Start Quiz\n            </Button>\n          </CardActions>\n        </Card> }\n      { quizState === QUIZ_STATE &&\n        <React.Fragment>\n          <LinearProgress variant=\"determinate\" value={(idx/total)*100} />\n          <QuizCard\n            idx={idx} \n            total={total}\n            question={questionData}\n            onQuizAnswerCorrect={() => nextQuestion(true)}\n            onQuizAnswerIncorrect={() => nextQuestion(false)} />\n        </React.Fragment>\n      }\n      { quizState === SUMMARY_STATE &&\n        <QuizSummary\n          correctQuestions={correctQuestions}\n          incorrectQuestions={incorrectQuestions}\n          restartQuiz={restartQuiz} />\n      }\n    </React.Fragment>\n  )\n}","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n  Divider\n} from '@material-ui/core';\n\nexport default function AppInfo(props) {\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom>\n          App Info\n        </Typography>\n        <Typography component=\"p\">\n          This app was built for a Pluralsight project on the AWS Certified Cloud Practitioner path. It is &copy;2020 Pluralsight. \n        </Typography>\n      </CardContent>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          React\n        </Typography>\n        <Typography component=\"p\">\n        MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => window.open(\"https://reactjs.org/\", \"_blank\")}>Visit React</Button>\n      </CardActions>\n      <Divider />\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Material UI\n        </Typography>\n        <Typography component=\"p\">\n        The MIT License (MIT)\n\nCopyright (c) 2014 Call-Em-All\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button onClick={() => window.open(\"https://material-ui.com/\", \"_blank\")}>Visit Material UI</Button>\n      </CardActions>\n      <Divider />\n      <CardActions>\n        <Button onClick={props.navigateToQuiz}>Take Quiz</Button>\n      </CardActions>\n    </Card>\n  )\n}","import React  from 'react';\nimport './App.css';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  Container\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Quiz from './components/Quiz';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AppInfo from './components/AppInfo';\n\nconst useStyles = makeStyles({\n  root: {\n    background: '#1B1B1B',\n    color: 'white',\n  },\n  layout: {\n    width: 'auto',\n    backgroundColor: '#F2F2F2',\n    height: '100%',\n    paddingTop: '30px'\n  }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#ed1f6a',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    }\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    isDrawerOpen: false\n  });\n\n  const QUIZ_STATE = 0;\n  const APP_INFO_STATE = 1;\n  const [pageState, setPageState] = React.useState(QUIZ_STATE);\n\n  const toggleDrawer  = () => {\n    setState({ ...state, isDrawerOpen: !state.isDrawerOpen });\n  }\n\n  const navigateToCourses = () => {\n    window.open(\"https://app.pluralsight.com/paths/certificate/aws-certified-cloud-practitioner\", \"_blank\")\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <CssBaseline />\n        <AppBar position=\"static\" className={classes.root}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" >\n              AWS Services Quiz\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          open={state.isDrawerOpen}\n          ModalProps={{ onBackdropClick: toggleDrawer }}>\n          <div onClick={toggleDrawer}>\n            <List>\n              <ListItem button key=\"courses\" onClick={navigateToCourses}>\n                <ListItemIcon><LocalLibraryIcon /></ListItemIcon>\n                <ListItemText primary=\"Courses\" />\n              </ListItem>\n              <ListItem button key=\"quiz\" onClick={() => setPageState(QUIZ_STATE)}>\n                <ListItemIcon><InfoIcon /></ListItemIcon>\n                <ListItemText primary=\"Quiz\" />\n              </ListItem>\n              <ListItem button key=\"info\" onClick={() => setPageState(APP_INFO_STATE)}>\n                <ListItemIcon><InfoIcon /></ListItemIcon>\n                <ListItemText primary=\"App Info\" />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>\n        <Container className={classes.layout}>\n          { pageState === QUIZ_STATE &&\n          <Quiz />\n          }\n          { pageState === APP_INFO_STATE &&\n          <AppInfo \n            navigateToQuiz={() => setPageState(QUIZ_STATE)} />\n          }\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}